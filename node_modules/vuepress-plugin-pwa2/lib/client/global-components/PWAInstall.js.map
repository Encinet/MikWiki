{"version":3,"file":"PWAInstall.js","sources":["../../../src/client/components/icons.ts","../../../src/client/define.ts","../../../src/client/components/PWAInstallModal.vue","../../../src/client/components/PWAInstallModal.vue?vue&type=template&id=3515dc64&lang.js","../../../src/client/global-components/PWAInstall.ts"],"sourcesContent":["import { IconBase } from \"@mr-hope/vuepress-shared/lib/client\";\nimport { h } from \"vue\";\nimport type { FunctionalComponent } from \"vue\";\n\nexport const ArrowLeftIcon: FunctionalComponent = () =>\n  h(\n    IconBase,\n    { name: \"arrow-left\" },\n\n    () =>\n      h(\"path\", {\n        d: \"M802.8 448h-428l166-158.8c23.8-25 23.8-65.4 0-90.4s-62.4-25-86.4 0L178 466.8c-12 11.6-18 27.4-18 44.8v0.8c0 17.4 6 33.2 18 44.8l276.2 268c24 25 62.6 25 86.4 0 23.8-25 23.8-65.4 0-90.4l-166-158.8h428c33.8 0 61.2-28.6 61.2-64 0.2-36-27.2-64-61-64z\",\n      })\n  );\n\nArrowLeftIcon.displayName = \"ArrowLeftIcon\";\n\nexport const ArrowRightIcon: FunctionalComponent = () =>\n  h(IconBase, { name: \"arrow-right\" }, () =>\n    h(\"path\", {\n      d: \"M569.8 825.2l276.2-268c12-11.6 18-27.4 18-44.8v-0.8c0-17.4-6-33.2-18-44.8l-276.2-268c-24-25-62.6-25-86.4 0-23.8 25-23.8 65.4 0 90.4l166 158.8h-428c-34 0-61.4 28.6-61.4 64 0 36 27.4 64 61.2 64h428l-166 158.8c-23.8 25-23.8 65.4 0 90.4 24 25 62.6 25 86.6 0z\",\n    })\n  );\n\nArrowRightIcon.displayName = \"ArrowRightIcon\";\n\nexport const CloseIcon: FunctionalComponent = () =>\n  h(IconBase, { name: \"close\" }, () =>\n    h(\"path\", {\n      d: \"M589.654 511.965 1007.212 84.22a49.777 49.777 0 0 0-.73-70.02 49.046 49.046 0 0 0-69.687.665L519.967 441.946 85.882 14.2a49.08 49.08 0 0 0-69.687.664 49.777 49.777 0 0 0 .664 70.019l433.454 427.082L16.859 939.048a49.777 49.777 0 0 0-.664 70.019 49.013 49.013 0 0 0 69.687.663l434.085-427.746 416.828 427.083A49.013 49.013 0 0 0 972.037 1024a48.416 48.416 0 0 0 34.512-14.27 49.777 49.777 0 0 0 .73-70.019z\",\n    })\n  );\n\nCloseIcon.displayName = \"CloseIcon\";\n\nexport const UpdateIcon: FunctionalComponent = () =>\n  h(IconBase, { name: \"update\" }, () =>\n    h(\"path\", {\n      d: \"M949.949 146.25v255.826c0 21.981-13.989 35.97-35.97 35.97H658.154c-13.988 0-25.983-7.992-33.973-21.981-5.997-13.989-4-27.977 7.991-39.97l79.942-77.946c-55.954-51.973-121.918-77.955-199.863-77.955-37.975 0-75.95 8.002-113.924 21.99-37.975 15.985-67.948 37.976-91.934 63.957-25.982 23.987-47.973 53.96-63.957 91.934-29.983 73.955-29.983 153.895 0 227.85 15.984 37.976 37.975 67.947 63.957 91.934 23.986 25.982 53.959 47.973 91.934 63.956 37.974 13.989 75.95 21.991 113.924 21.991 45.967 0 87.942-9.998 127.913-29.982 41.976-17.99 75.951-45.967 101.931-83.943 7.993-4 11.994-5.995 13.989-5.995 5.997 0 9.998 1.994 13.988 5.995l77.958 77.946c3.989 4 5.986 7.993 5.986 11.994 0 1.994-1.996 5.995-3.99 11.994-43.973 51.962-93.941 91.934-151.9 117.914-53.958 25.983-115.92 39.972-185.874 39.972-61.961 0-119.921-11.984-169.89-33.973-57.96-25.985-105.923-57.963-139.896-93.943-35.98-33.972-67.958-81.936-93.94-139.897-45.967-101.93-45.967-237.846 0-339.777 25.982-57.96 57.96-105.923 93.94-139.896 33.973-35.98 81.936-67.958 139.896-93.94 49.968-21.99 107.928-33.974 169.89-33.974 55.963 0 109.923 9.988 161.885 29.973 53.97 21.99 101.933 51.963 139.908 89.938l73.954-73.944c9.987-9.998 23.987-13.988 39.971-8.002 13.988 8.002 21.98 19.995 21.98 33.984z\",\n    })\n  );\n\nUpdateIcon.displayName = \"UpdateIcon\";\n","import type { PWALocaleConfig } from \"../shared\";\n\ndeclare const PWA_LOCALES: PWALocaleConfig;\ndeclare const SW_PATH: string;\n\nexport const serviceWorkerPath = SW_PATH;\nexport const locales = PWA_LOCALES;\n","<template>\n  <div id=\"install-modal-wrapper\">\n    <div class=\"background\" @click=\"$emit('toggle', false)\" />\n\n    <div class=\"install-modal\">\n      <div class=\"header\">\n        <button\n          class=\"close-button\"\n          :aria-label=\"locale.close\"\n          @click=\"$emit('toggle', false)\"\n        >\n          <CloseIcon />\n        </button>\n        <div class=\"logo\">\n          <img\n            v-if=\"manifest.icons\"\n            :src=\"manifest.icons[0].src\"\n            alt=\"App Logo\"\n          />\n          <div class=\"title\">\n            <h1>{{ manifest.short_name || manifest.name }}</h1>\n            <p class=\"desc\">{{ locale.explain }}</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"content\">\n        <div class=\"highlight\">\n          <div v-if=\"manifest.features\" class=\"feature-wrapper\">\n            <h3>{{ locale.feature }}</h3>\n            <ul v-if=\"manifest.features\">\n              <li\n                v-for=\"feature in manifest.features\"\n                :key=\"feature\"\n                v-text=\"feature\"\n              />\n            </ul>\n          </div>\n\n          <div v-if=\"manifest.screenshots\" class=\"screenshot-wrapper\">\n            <button :aria-label=\"locale.prevImage\" @click=\"scrolltoLeft\">\n              <ArrowLeftIcon />\n            </button>\n            <section class=\"screenshot\">\n              <div\n                v-for=\"screenshot in manifest.screenshots\"\n                :key=\"screenshot.src\"\n              >\n                <img alt=\"App Screenshot\" :src=\"screenshot.src\" />\n              </div>\n            </section>\n            <button :aria-label=\"locale.nextImage\" @click=\"scrolltoRight\">\n              <ArrowRightIcon />\n            </button>\n          </div>\n        </div>\n        <div class=\"description\">\n          <h3 v-text=\"locale.desc\" />\n          <p v-text=\"manifest.description\" />\n        </div>\n      </div>\n\n      <div v-if=\"useHint\" class=\"ios-text\" @click=\"hint\">\n        <p>{{ locale.iOSInstall }}</p>\n        <button class=\"success\">Got it!</button>\n      </div>\n      <div v-else class=\"button-wrapper\">\n        <button class=\"install-button\" @click=\"install\">\n          {{ locale.install }} <span>{{ manifest.short_name }}</span>\n        </button>\n        <button class=\"cancel-button\" @click=\"$emit('toggle', false)\">\n          {{ locale.cancel }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useLocaleConfig } from \"@mr-hope/vuepress-shared/lib/client\";\nimport { withBase } from \"@vuepress/client\";\nimport { onBeforeMount, defineComponent, onMounted, ref } from \"vue\";\nimport { ArrowLeftIcon, ArrowRightIcon, CloseIcon } from \"./icons\";\nimport { locales } from \"../define\";\n\nimport type { ManifestOption } from \"../../shared\";\n\ninterface InstallPromptEvent extends Event {\n  readonly platforms: string;\n  prompt: () => void;\n  readonly userChoice: Promise<{ outcome: \"accepted\" | \"dismissed\" }>;\n}\n\nlet escapeHandler: (event: KeyboardEvent) => void;\nlet installPromptHandler: (event: Event) => void;\n\nexport default defineComponent({\n  name: \"PWAInstallModal\",\n\n  components: {\n    ArrowLeftIcon,\n    ArrowRightIcon,\n    CloseIcon,\n  },\n\n  props: {\n    useHint: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\"can-install\", \"hint\", \"toggle\"],\n\n  setup(_props, { emit }) {\n    const locale = useLocaleConfig(locales);\n\n    const manifest = ref<ManifestOption>({});\n    const isIOS = ref(false);\n    const deferredprompt = ref<InstallPromptEvent | null>(null);\n\n    const getManifest = async (): Promise<void> => {\n      const manifestContent = localStorage.getItem(\"manifest\");\n\n      if (manifestContent)\n        manifest.value = JSON.parse(manifestContent) as ManifestOption;\n      else\n        try {\n          const response = await fetch(withBase(\"manifest.webmanifest\"));\n          const data = (await response.json()) as ManifestOption;\n\n          manifest.value = data;\n          localStorage.setItem(\"manifest\", JSON.stringify(data));\n        } catch (err) {\n          console.error(\n            \"[PWA]: Error getting manifest, check that you have a valid web manifest or network connection\"\n          );\n        }\n    };\n\n    const scrolltoLeft = (): void => {\n      const screenshotsDiv = document.querySelector(\".screenshot\");\n\n      if (screenshotsDiv)\n        screenshotsDiv.scrollBy({\n          left: -screenshotsDiv.clientWidth,\n          top: 0,\n          behavior: \"smooth\",\n        });\n    };\n\n    const scrolltoRight = (): void => {\n      const screenshotsDiv = document.querySelector(\".screenshot\");\n      if (screenshotsDiv)\n        screenshotsDiv.scrollBy({\n          left: screenshotsDiv.clientWidth,\n          top: 0,\n          behavior: \"smooth\",\n        });\n    };\n\n    const install = async (): Promise<void> => {\n      if (deferredprompt.value) {\n        deferredprompt.value.prompt();\n\n        document.dispatchEvent(new CustomEvent(\"show\"));\n\n        const choiceResult = await deferredprompt.value.userChoice;\n\n        if (choiceResult.outcome === \"accepted\") {\n          console.info(\"PWA has been installed\");\n\n          emit(\"toggle\", false);\n          emit(\"can-install\", false);\n        } else {\n          console.info(\"You choose to not install PWA\");\n\n          emit(\"toggle\", false);\n          emit(\"can-install\", false);\n        }\n      }\n    };\n\n    const hint = (): void => {\n      console.info(\"You accepted the install hint\");\n      emit(\"hint\");\n    };\n\n    onMounted(() => {\n      // eslint-disable-next-line no-prototype-builtins\n      if (window.hasOwnProperty(\"BeforeInstallPromptEvent\")) {\n        installPromptHandler = (event): void => {\n          deferredprompt.value = event as InstallPromptEvent;\n\n          emit(\"can-install\", true);\n          event.preventDefault();\n        };\n\n        // grab an install event\n        window.addEventListener(\"beforeinstallprompt\", installPromptHandler);\n\n        void getManifest();\n\n        escapeHandler = (event): void => {\n          if (event.key === \"Escape\") emit(\"toggle\", false);\n        };\n\n        document.addEventListener(\"keyup\", escapeHandler);\n      }\n    });\n\n    onBeforeMount(() => {\n      // eslint-disable-next-line no-prototype-builtins\n      if (window.hasOwnProperty(\"BeforeInstallPromptEvent\"))\n        document.removeEventListener(\n          \"beforeinstallprompt\",\n          installPromptHandler\n        );\n      document.removeEventListener(\"keyup\", escapeHandler);\n    });\n\n    return {\n      locale,\n      isIOS,\n      manifest,\n\n      getManifest,\n      scrolltoLeft,\n      scrolltoRight,\n      install,\n      hint,\n    };\n  },\n});\n</script>\n","<template>\n  <div id=\"install-modal-wrapper\">\n    <div class=\"background\" @click=\"$emit('toggle', false)\" />\n\n    <div class=\"install-modal\">\n      <div class=\"header\">\n        <button\n          class=\"close-button\"\n          :aria-label=\"locale.close\"\n          @click=\"$emit('toggle', false)\"\n        >\n          <CloseIcon />\n        </button>\n        <div class=\"logo\">\n          <img\n            v-if=\"manifest.icons\"\n            :src=\"manifest.icons[0].src\"\n            alt=\"App Logo\"\n          />\n          <div class=\"title\">\n            <h1>{{ manifest.short_name || manifest.name }}</h1>\n            <p class=\"desc\">{{ locale.explain }}</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"content\">\n        <div class=\"highlight\">\n          <div v-if=\"manifest.features\" class=\"feature-wrapper\">\n            <h3>{{ locale.feature }}</h3>\n            <ul v-if=\"manifest.features\">\n              <li\n                v-for=\"feature in manifest.features\"\n                :key=\"feature\"\n                v-text=\"feature\"\n              />\n            </ul>\n          </div>\n\n          <div v-if=\"manifest.screenshots\" class=\"screenshot-wrapper\">\n            <button :aria-label=\"locale.prevImage\" @click=\"scrolltoLeft\">\n              <ArrowLeftIcon />\n            </button>\n            <section class=\"screenshot\">\n              <div\n                v-for=\"screenshot in manifest.screenshots\"\n                :key=\"screenshot.src\"\n              >\n                <img alt=\"App Screenshot\" :src=\"screenshot.src\" />\n              </div>\n            </section>\n            <button :aria-label=\"locale.nextImage\" @click=\"scrolltoRight\">\n              <ArrowRightIcon />\n            </button>\n          </div>\n        </div>\n        <div class=\"description\">\n          <h3 v-text=\"locale.desc\" />\n          <p v-text=\"manifest.description\" />\n        </div>\n      </div>\n\n      <div v-if=\"useHint\" class=\"ios-text\" @click=\"hint\">\n        <p>{{ locale.iOSInstall }}</p>\n        <button class=\"success\">Got it!</button>\n      </div>\n      <div v-else class=\"button-wrapper\">\n        <button class=\"install-button\" @click=\"install\">\n          {{ locale.install }} <span>{{ manifest.short_name }}</span>\n        </button>\n        <button class=\"cancel-button\" @click=\"$emit('toggle', false)\">\n          {{ locale.cancel }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useLocaleConfig } from \"@mr-hope/vuepress-shared/lib/client\";\nimport { withBase } from \"@vuepress/client\";\nimport { onBeforeMount, defineComponent, onMounted, ref } from \"vue\";\nimport { ArrowLeftIcon, ArrowRightIcon, CloseIcon } from \"./icons\";\nimport { locales } from \"../define\";\n\nimport type { ManifestOption } from \"../../shared\";\n\ninterface InstallPromptEvent extends Event {\n  readonly platforms: string;\n  prompt: () => void;\n  readonly userChoice: Promise<{ outcome: \"accepted\" | \"dismissed\" }>;\n}\n\nlet escapeHandler: (event: KeyboardEvent) => void;\nlet installPromptHandler: (event: Event) => void;\n\nexport default defineComponent({\n  name: \"PWAInstallModal\",\n\n  components: {\n    ArrowLeftIcon,\n    ArrowRightIcon,\n    CloseIcon,\n  },\n\n  props: {\n    useHint: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: [\"can-install\", \"hint\", \"toggle\"],\n\n  setup(_props, { emit }) {\n    const locale = useLocaleConfig(locales);\n\n    const manifest = ref<ManifestOption>({});\n    const isIOS = ref(false);\n    const deferredprompt = ref<InstallPromptEvent | null>(null);\n\n    const getManifest = async (): Promise<void> => {\n      const manifestContent = localStorage.getItem(\"manifest\");\n\n      if (manifestContent)\n        manifest.value = JSON.parse(manifestContent) as ManifestOption;\n      else\n        try {\n          const response = await fetch(withBase(\"manifest.webmanifest\"));\n          const data = (await response.json()) as ManifestOption;\n\n          manifest.value = data;\n          localStorage.setItem(\"manifest\", JSON.stringify(data));\n        } catch (err) {\n          console.error(\n            \"[PWA]: Error getting manifest, check that you have a valid web manifest or network connection\"\n          );\n        }\n    };\n\n    const scrolltoLeft = (): void => {\n      const screenshotsDiv = document.querySelector(\".screenshot\");\n\n      if (screenshotsDiv)\n        screenshotsDiv.scrollBy({\n          left: -screenshotsDiv.clientWidth,\n          top: 0,\n          behavior: \"smooth\",\n        });\n    };\n\n    const scrolltoRight = (): void => {\n      const screenshotsDiv = document.querySelector(\".screenshot\");\n      if (screenshotsDiv)\n        screenshotsDiv.scrollBy({\n          left: screenshotsDiv.clientWidth,\n          top: 0,\n          behavior: \"smooth\",\n        });\n    };\n\n    const install = async (): Promise<void> => {\n      if (deferredprompt.value) {\n        deferredprompt.value.prompt();\n\n        document.dispatchEvent(new CustomEvent(\"show\"));\n\n        const choiceResult = await deferredprompt.value.userChoice;\n\n        if (choiceResult.outcome === \"accepted\") {\n          console.info(\"PWA has been installed\");\n\n          emit(\"toggle\", false);\n          emit(\"can-install\", false);\n        } else {\n          console.info(\"You choose to not install PWA\");\n\n          emit(\"toggle\", false);\n          emit(\"can-install\", false);\n        }\n      }\n    };\n\n    const hint = (): void => {\n      console.info(\"You accepted the install hint\");\n      emit(\"hint\");\n    };\n\n    onMounted(() => {\n      // eslint-disable-next-line no-prototype-builtins\n      if (window.hasOwnProperty(\"BeforeInstallPromptEvent\")) {\n        installPromptHandler = (event): void => {\n          deferredprompt.value = event as InstallPromptEvent;\n\n          emit(\"can-install\", true);\n          event.preventDefault();\n        };\n\n        // grab an install event\n        window.addEventListener(\"beforeinstallprompt\", installPromptHandler);\n\n        void getManifest();\n\n        escapeHandler = (event): void => {\n          if (event.key === \"Escape\") emit(\"toggle\", false);\n        };\n\n        document.addEventListener(\"keyup\", escapeHandler);\n      }\n    });\n\n    onBeforeMount(() => {\n      // eslint-disable-next-line no-prototype-builtins\n      if (window.hasOwnProperty(\"BeforeInstallPromptEvent\"))\n        document.removeEventListener(\n          \"beforeinstallprompt\",\n          installPromptHandler\n        );\n      document.removeEventListener(\"keyup\", escapeHandler);\n    });\n\n    return {\n      locale,\n      isIOS,\n      manifest,\n\n      getManifest,\n      scrolltoLeft,\n      scrolltoRight,\n      install,\n      hint,\n    };\n  },\n});\n</script>\n","import { useLocaleConfig } from \"@mr-hope/vuepress-shared/lib/client\";\nimport { computed, defineComponent, h, onMounted, ref } from \"vue\";\nimport PWAInstallModal from \"../components/PWAInstallModal.vue\";\nimport { locales } from \"../define\";\n\nimport type { VNode } from \"vue\";\nimport type { ManifestRelatedApps } from \"../../shared\";\n\nimport \"../styles/modal.scss\";\n\ninterface ModernNavigator extends Navigator {\n  // Unstandard Api\n  getInstalledRelatedApps: () => Promise<ManifestRelatedApps[]>;\n}\n\ninterface SafariNavigator extends Navigator {\n  // Available on Apple’s iOS Safari only.\n  standalone: boolean;\n}\n\nexport default defineComponent({\n  name: \"PWAInstall\",\n\n  setup() {\n    const locale = useLocaleConfig(locales);\n\n    const canInstall = ref(false);\n    const hasRelatedApps = ref(false);\n    const isOpen = ref(false);\n    const isIOS = ref(false);\n    const isSafari = ref(false);\n    const hinted = ref(false);\n\n    const useHint = computed(\n      () => isIOS.value && isSafari.value && hinted.value === false\n    );\n\n    const showInstall = computed(\n      () => (hasRelatedApps.value && canInstall.value) || useHint.value\n    );\n\n    const getInstalledStatus = (): boolean => {\n      if ((navigator as SafariNavigator).standalone)\n        return (navigator as SafariNavigator).standalone;\n\n      return matchMedia(\"(display-mode: standalone)\").matches;\n    };\n\n    const hint = (): void => {\n      isOpen.value = false;\n      hinted.value = true;\n      // do not notify again\n      localStorage.setItem(\"iOS-pwa-hint\", \"hinted\");\n    };\n\n    onMounted(() => {\n      if (getInstalledStatus()) {\n        const { userAgent } = navigator;\n\n        // handle iOS specifically\n        isIOS.value =\n          // regular iPhone\n          userAgent.includes(\"iPhone\") ||\n          // regular iPad\n          userAgent.includes(\"iPad\") ||\n          // iPad pro\n          Boolean(\n            userAgent.includes(\"Macintosh\") &&\n              navigator.maxTouchPoints &&\n              navigator.maxTouchPoints > 2\n          );\n\n        isSafari.value =\n          navigator.userAgent.includes(\"Safari\") &&\n          !userAgent.includes(\"Chrome\");\n\n        hinted.value = Boolean(localStorage.getItem(\"iOS-pwa-hint\"));\n      }\n\n      if (\"getInstalledRelatedApps\" in (navigator as ModernNavigator))\n        void (navigator as ModernNavigator)\n          .getInstalledRelatedApps()\n          .then((result) => {\n            hasRelatedApps.value = result.length > 0;\n          });\n    });\n\n    return (): VNode =>\n      h(\"div\", { id: \"pwa-install\" }, [\n        showInstall.value\n          ? h(\n              \"button\",\n              {\n                class: \"modal-button\",\n                useHint: useHint.value,\n                onClick: () => {\n                  isOpen.value = true;\n                },\n              },\n              locale.value.install\n            )\n          : null,\n        h(PWAInstallModal, {\n          style: {\n            display: isOpen.value ? \"block\" : \"none\",\n          },\n          onCanInstall: (value: boolean) => {\n            canInstall.value = value;\n          },\n          onHint: () => hint(),\n          onToggle: (value: boolean) => {\n            isOpen.value = value;\n          },\n        }),\n      ]);\n  },\n});\n"],"names":["ArrowLeftIcon","h","IconBase","name","d","displayName","ArrowRightIcon","CloseIcon","locales","PWA_LOCALES","escapeHandler","installPromptHandler","defineComponent","components","props","useHint","type","Boolean","default","emits","setup","_props","emit","locale","useLocaleConfig","manifest","ref","isIOS","deferredprompt","getManifest","async","manifestContent","localStorage","getItem","value","JSON","parse","response","fetch","withBase","data","json","setItem","stringify","err","console","error","onMounted","window","hasOwnProperty","event","preventDefault","addEventListener","key","document","onBeforeMount","removeEventListener","scrolltoLeft","screenshotsDiv","querySelector","scrollBy","left","clientWidth","top","behavior","scrolltoRight","install","prompt","dispatchEvent","CustomEvent","userChoice","outcome","info","hint","id","class","_createElementVNode","_createElementBlock","_hoisted_1","onClick","_ctx","_hoisted_2","_hoisted_3","close","_createVNode","_hoisted_5","src","icons","alt","_hoisted_7","short_name","_hoisted_8","explain","_hoisted_9","_hoisted_10","_hoisted_11","feature","features","_toDisplayString","_hoisted_14","prevImage","_hoisted_16","screenshots","screenshot","nextImage","_hoisted_19","desc","description","iOSInstall","_hoisted_22","_hoisted_23","cancel","canInstall","hasRelatedApps","isOpen","isSafari","hinted","computed","showInstall","navigator","standalone","matchMedia","matches","userAgent","includes","maxTouchPoints","getInstalledRelatedApps","then","result","length","PWAInstallModal","style","display","onCanInstall","onHint","onToggle"],"mappings":"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"}