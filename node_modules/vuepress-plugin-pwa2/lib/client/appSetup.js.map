{"version":3,"file":"appSetup.js","sources":["../../src/client/composables/usePwaEvent.ts","../../src/client/define.ts","../../src/client/appSetup.ts","../../../../node_modules/register-service-worker/index.js","../../../../node_modules/mitt/dist/mitt.mjs"],"sourcesContent":[null,null,null,"// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () { return Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n); }\n\nvar waitWindowLoad\n// https://github.com/yyx990803/register-service-worker/pull/33#discussion_r394181861\nif (typeof window !== 'undefined') {\n  // Typically, a browser that supports `serviceWorker` should also have supported\n  // `Promise`. But as this package can be used in environments without service\n  // worker support (in that case it would do nothing), there's a chance that\n  // `Promise` does not exist. So we must check for its existence first.\n  if (typeof Promise !== 'undefined') {\n    waitWindowLoad = new Promise(function (resolve) { return window.addEventListener('load', resolve); })\n  } else {\n    waitWindowLoad = { then: function (cb) { return window.addEventListener('load', cb); } }\n  }\n}\n\nexport function register (swUrl, hooks) {\n  if ( hooks === void 0 ) hooks = {};\n\n  var registrationOptions = hooks.registrationOptions; if ( registrationOptions === void 0 ) registrationOptions = {};\n  delete hooks.registrationOptions\n\n  var emit = function (hook) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args)\n    }\n  }\n\n  if ('serviceWorker' in navigator) {\n    waitWindowLoad.then(function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        }).catch(function (error) { return handleError(emit, error); })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        }).catch(function (error) { return handleError(emit, error); })\n      }\n    })\n  }\n}\n\nfunction handleError (emit, error) {\n  if (!navigator.onLine) {\n    emit('offline')\n  }\n  emit('error', error)\n}\n\nfunction registerValidSW (swUrl, emit, registrationOptions) {\n  navigator.serviceWorker\n    .register(swUrl, registrationOptions)\n    .then(function (registration) {\n      emit('registered', registration)\n      if (registration.waiting) {\n        emit('updated', registration)\n        return\n      }\n      registration.onupdatefound = function () {\n        emit('updatefound', registration)\n        var installingWorker = registration.installing\n        installingWorker.onstatechange = function () {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              emit('updated', registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              emit('cached', registration)\n            }\n          }\n        }\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nfunction checkValidServiceWorker (swUrl, emit, registrationOptions) {\n  // Check if the service worker can be found.\n  fetch(swUrl)\n    .then(function (response) {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404) {\n        // No service worker found.\n        emit('error', new Error((\"Service worker not found at \" + swUrl)))\n        unregister()\n      } else if (response.headers.get('content-type').indexOf('javascript') === -1) {\n        emit('error', new Error(\n          \"Expected \" + swUrl + \" to have javascript content-type, \" +\n          \"but received \" + (response.headers.get('content-type'))))\n        unregister()\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, emit, registrationOptions)\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister()\n    }).catch(function (error) { return handleError(emit, error); })\n  }\n}\n","export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n"],"names":["pwaEventSymbol","Symbol","for","serviceWorkerPath","SW_PATH","waitWindowLoad","defineClientAppSetup","__VUEPRESS_SSR__","event","all","n","Map","on","t","e","i","get","push","set","off","splice","indexOf","emit","slice","map","provide","onMounted","async","process","env","NODE_ENV","register","Promise","withBase","ready","registration","console","log","registered","cached","updatefound","updated","key","version","Number","localStorage","getItem","setItem","toString","removeItem","offline","error","err","handleError","navigator","onLine","registerValidSW","swUrl","registrationOptions","serviceWorker","then","waiting","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","unregister","window","resolve","addEventListener","cb","hooks","hook","args","len","arguments","length","apply","Boolean","location","hostname","match","fetch","response","status","Error","headers","checkValidServiceWorker"],"mappings":"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"}