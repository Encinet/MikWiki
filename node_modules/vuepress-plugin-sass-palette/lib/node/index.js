"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@vuepress/utils"),s=require("@mr-hope/vuepress-shared");const t=new s.Logger("vuepress-plugin-sass-palette"),a=e.path.resolve(__dirname,"../../styles/empty.scss"),n=({id:n="hope",config:l=`.vuepress/styles/${n}-config.scss`,defaultConfig:i=e.path.resolve(__dirname,"../../styles/default/config.scss"),palette:p=`.vuepress/styles/${n}-palette.scss`,defaultPalette:r=e.path.resolve(__dirname,"../../styles/default/palette.scss"),generator:o=e.path.resolve(__dirname,"../../styles/empty.scss"),style:c},u)=>{const $=u.dir.source(l),d=u.dir.source(p),g=s=>e.fs.pathExistsSync(s)?s:a;return((e,t)=>{const{bundler:a,bundlerConfig:n}=e.options;if(a.endsWith("vite")){const e=n,a=e.viteOptions?.css?.preprocessorOptions?.scss.additionalData;e.viteOptions=s.mergeViteConfig(e.viteOptions,{css:{preprocessorOptions:{scss:{charset:!1,additionalData:async(e,s)=>"string"==typeof a?`@use "@sass-palette/${t}-config";\n${a}${e}`:"function"==typeof a?`@use "@sass-palette/${t}-config";\n${await a(e,s)}`:`@use "@sass-palette/${t}-config";\n${e}`}}}})}if(a.endsWith("webpack")){const s=e.options.bundlerConfig;s.scss||(s.scss={});const{additionalData:a}=s.scss,n=(e,s)=>"string"==typeof a?`@use "@sass-palette/${t}-config";\n${a}${e}`:"function"==typeof a?`@use "@sass-palette/${t}-config";\n${a(e,s)}`:`@use "@sass-palette/${t}-config";\n${e}`;s.scss.additionalData=n}})(u,n),{name:`vuepress-plugin-sass-palette?${n}`,alias:{"@sass-palette/helper":e.path.resolve(__dirname,"../../styles/helper.scss"),[`@sass-palette/${n}-config`]:u.dir.temp(`sass-palette/${n}-config.scss`),[`@sass-palette/${n}-inject`]:u.dir.temp(`sass-palette/${n}-inject.scss`),[`@sass-palette/${n}-palette`]:u.dir.temp(`sass-palette/${n}-palette.scss`),...c?{[`@sass-palette/${n}-style`]:u.dir.temp(`sass-palette/${n}-style.scss`)}:{}},onInitialized:()=>{const e=[u.writeTemp(`sass-palette/load-${n}.js`,`import "@sass-palette/${n}-inject";export default ()=>{};`),u.writeTemp(`sass-palette/${n}-config.scss`,`\n@import "${g(r)}";\n@import "${g(i)}";\n@import "${g(d)}";\n@import "${g($)}";\n@import "${g(o)}";\n`),u.writeTemp(`sass-palette/${n}-inject.scss`,`\n@use "sass:color";\n@use "sass:list";\n@use "sass:math";\n@use "sass:map";\n@use "sass:meta";\n\n@use "@sass-palette/helper";\n@use "@sass-palette/${n}-palette";\n\n$variables: meta.module-variables("${n}-palette");\n\n${u.env.isDebug?`@debug "${n} palette variables:";\n@debug $variables;\n@debug "${n} config variables:";\n@debug meta.module-variables("${n}-config");`:""}\n\n@each $name, $value in $variables {\n  $key: helper.camel-to-kebab($name);\n\n  @if meta.type-of($value) == number or meta.type-of($value) == string {\n    :root {\n      #{$key}: #{$value};\n    }\n  } @else if helper.color-islegal($value) {\n    @if meta.global-variable-exists("darkSelector", $module: "${n}-config") {\n      @include helper.inject-color($key, $value, $darkSelector: ${n}-config.$darkSelector);\n    } @else {\n      @include helper.inject-color($key, $value);\n    }\n  }\n}\n`),u.writeTemp(`sass-palette/${n}-palette.scss`,`\n@import "${g(r)}";\n@import "${g(d)}";\n@import "${g(o)}";\n`)];if(c){const s=u.dir.source(c);e.push(u.writeTemp(`sass-palette/${n}-style.scss`,`@forward "${g(s)}";\n`))}return Promise.all(e).then((()=>{u.env.isDebug&&t.info(`Style file for ${n} generated`)}))},clientAppEnhanceFiles:u.dir.temp(`sass-palette/load-${n}.js`)}};exports.default=n,exports.removePalettePlugin=(e,s)=>{const t=e.pluginApi.plugins.findIndex((e=>e.name===`vuepress-plugin-sass-palette?${s}`));-1!==t&&e.pluginApi.plugins.splice(t,1)},exports.sassPalette=e=>["sass-palette",e],exports.sassPalettePlugin=n,exports.useSassPalettePlugin=(e,s)=>{e.pluginApi.plugins.every((e=>e.name!==`vuepress-plugin-sass-palette?${s.id}`))&&e.use(n,s)};
//# sourceMappingURL=index.js.map
